import{_ as n,c as s,o as a,d as e}from"./app-CpJvYDCh.js";const t={},p=e(`<h1 id="指南" tabindex="-1"><a class="header-anchor" href="#指南"><span>指南</span></a></h1><h2 id="快速上手" tabindex="-1"><a class="header-anchor" href="#快速上手"><span>快速上手</span></a></h2><p>dev-admin-web</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">pnpm</span> <span class="token function">install</span> <span class="token comment"># 安装依赖</span></span>
<span class="line"><span class="token function">pnpm</span> run dev <span class="token comment"># 运行</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>dev-admin</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">go run main.go</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h2><h3 id="响应" tabindex="-1"><a class="header-anchor" href="#响应"><span>响应</span></a></h3><p>dev-admin调用了devtool中的API库，并使其简化。</p><p>你的项目可以调用dev-admin的方法，从而使项目更加简洁。</p><h4 id="返回错误" tabindex="-1"><a class="header-anchor" href="#返回错误"><span>返回错误</span></a></h4><p>示例：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre class="language-go"><code><span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>p Platform<span class="token punctuation">)</span> <span class="token function">Create</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	result <span class="token operator">:=</span> d<span class="token punctuation">.</span>Database<span class="token punctuation">[</span>d<span class="token punctuation">.</span>LibraryGorm<span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>DB<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>form<span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">if</span> result<span class="token punctuation">.</span>Error <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">		d<span class="token punctuation">.</span>Gin<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> dadmin<span class="token punctuation">.</span><span class="token function">Err</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>Error<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">		<span class="token keyword">return</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们使用 <code>d.Gin{}.Error(c, dadmin.Err(err))</code>这样的方式返回错误</p><h4 id="返回成功" tabindex="-1"><a class="header-anchor" href="#返回成功"><span>返回成功</span></a></h4><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre class="language-go"><code><span class="line">d<span class="token punctuation">.</span>Gin<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> dadmin<span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span>form<span class="token punctuation">.</span>ID<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="登录" tabindex="-1"><a class="header-anchor" href="#登录"><span>登录</span></a></h3><h4 id="调用" tabindex="-1"><a class="header-anchor" href="#调用"><span>调用</span></a></h4><p>调用可以使用自定义的参数，也可以使用内置的默认参数。</p><p>不带参数的调用，使用默认参数</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre class="language-go"><code><span class="line">authMiddleware<span class="token punctuation">,</span> err <span class="token operator">:=</span> jwt<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>dadmin<span class="token punctuation">.</span><span class="token function">LoginNew</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>带参数的调用，以下只是一个示例，具体根据你的业务逻辑来设置参数</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre class="language-go"><code><span class="line">authMiddleware<span class="token punctuation">,</span> err <span class="token operator">:=</span> jwt<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>dadmin<span class="token punctuation">.</span><span class="token function">LoginNew</span><span class="token punctuation">(</span></span>
<span class="line">		dadmin<span class="token punctuation">.</span><span class="token function">LoginWithTimeout</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Second<span class="token operator">*</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">		dadmin<span class="token punctuation">.</span><span class="token function">LoginWithMaxRefresh</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Second<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">		dadmin<span class="token punctuation">.</span><span class="token function">LoginWithCustomFieldAccessToken</span><span class="token punctuation">(</span><span class="token string">&quot;accessToken&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">		dadmin<span class="token punctuation">.</span><span class="token function">LoginWithCustomFieldRefreshToken</span><span class="token punctuation">(</span><span class="token string">&quot;refreshToken&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">		dadmin<span class="token punctuation">.</span><span class="token function">LoginWithCustomFieldExpire</span><span class="token punctuation">(</span><span class="token string">&quot;expires&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="可选参数" tabindex="-1"><a class="header-anchor" href="#可选参数"><span>可选参数</span></a></h4><h5 id="加密盐" tabindex="-1"><a class="header-anchor" href="#加密盐"><span>加密盐</span></a></h5><p>默认为随机生成的加密盐。</p><p>你可以设置自定义的加密盐，只需要在调用的时候附带 <code>dadmin.LoginWithKey(&quot;YOUR_KEY&quot;)</code> 作为参数，其中的YOUR_KEY替换为你需要自定义的加密盐。</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre class="language-go"><code><span class="line">authMiddleware<span class="token punctuation">,</span> err <span class="token operator">:=</span> jwt<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>dadmin<span class="token punctuation">.</span><span class="token function">LoginNew</span><span class="token punctuation">(</span></span>
<span class="line">		dadmin<span class="token punctuation">.</span><span class="token function">LoginWithKey</span><span class="token punctuation">(</span><span class="token string">&quot;YOUR_KEY&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="访问令牌过期时间" tabindex="-1"><a class="header-anchor" href="#访问令牌过期时间"><span>访问令牌过期时间</span></a></h5><p>默认为2个小时。</p><p>你可以设置自定义的过期时间，只需要在调用的时候附带 <code>dadmin.LoginWithTimeout(time.Second*5)</code> 作为参数，其中的 <code>time.Second*5</code> 替换为你需要自定义的过期时间。</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre class="language-go"><code><span class="line">authMiddleware<span class="token punctuation">,</span> err <span class="token operator">:=</span> jwt<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>dadmin<span class="token punctuation">.</span><span class="token function">LoginNew</span><span class="token punctuation">(</span></span>
<span class="line">		dadmin<span class="token punctuation">.</span><span class="token function">LoginWithTimeout</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Second<span class="token operator">*</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="刷新令牌过期时间" tabindex="-1"><a class="header-anchor" href="#刷新令牌过期时间"><span>刷新令牌过期时间</span></a></h5><p>默认为24个小时（一天）。</p><p>你可以设置自定义的过期时间，只需要在调用的时候附带 <code>dadmin.LoginWithMaxRefresh(time.Second*10)</code> 作为参数，其中的 <code>time.Second*10</code> 替换为你需要自定义的过期时间。</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre class="language-go"><code><span class="line">authMiddleware<span class="token punctuation">,</span> err <span class="token operator">:=</span> jwt<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>dadmin<span class="token punctuation">.</span><span class="token function">LoginNew</span><span class="token punctuation">(</span></span>
<span class="line">		dadmin<span class="token punctuation">.</span><span class="token function">LoginWithMaxRefresh</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Second<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="自定义访问令牌的字段名" tabindex="-1"><a class="header-anchor" href="#自定义访问令牌的字段名"><span>自定义访问令牌的字段名</span></a></h5><p>默认为 <code>token</code>。</p><p>你可以设置自定义的字段名，只需要在调用的时候附带 <code>dadmin.LoginWithCustomFieldAccessToken(&quot;accessToken&quot;)</code> 作为参数，其中的 <code>accessToken</code> 替换为你需要自定义的字段名。</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre class="language-go"><code><span class="line">authMiddleware<span class="token punctuation">,</span> err <span class="token operator">:=</span> jwt<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>dadmin<span class="token punctuation">.</span><span class="token function">LoginNew</span><span class="token punctuation">(</span></span>
<span class="line">		dadmin<span class="token punctuation">.</span><span class="token function">LoginWithCustomFieldAccessToken</span><span class="token punctuation">(</span><span class="token string">&quot;accessToken&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="自定义刷新令牌的字段名" tabindex="-1"><a class="header-anchor" href="#自定义刷新令牌的字段名"><span>自定义刷新令牌的字段名</span></a></h5><p>默认为 <code>refresh_token</code>。</p><p>你可以设置自定义的字段名，只需要在调用的时候附带 <code>dadmin.LoginWithCustomFieldRefreshToken(&quot;refreshToken&quot;)</code> 作为参数，其中的 <code>refreshToken</code> 替换为你需要自定义的字段名。</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre class="language-go"><code><span class="line">authMiddleware<span class="token punctuation">,</span> err <span class="token operator">:=</span> jwt<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>dadmin<span class="token punctuation">.</span><span class="token function">LoginNew</span><span class="token punctuation">(</span></span>
<span class="line">		dadmin<span class="token punctuation">.</span><span class="token function">LoginWithCustomFieldRefreshToken</span><span class="token punctuation">(</span><span class="token string">&quot;refreshToken&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="自定义令牌过期时间的字段名" tabindex="-1"><a class="header-anchor" href="#自定义令牌过期时间的字段名"><span>自定义令牌过期时间的字段名</span></a></h5><p>默认为 <code>expire</code>。</p><p>你可以设置自定义的字段名，只需要在调用的时候附带 <code>dadmin.LoginWithCustomFieldExpire(&quot;expires&quot;)</code> 作为参数，其中的 <code>expires</code> 替换为你需要自定义的字段名。</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre class="language-go"><code><span class="line">authMiddleware<span class="token punctuation">,</span> err <span class="token operator">:=</span> jwt<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>dadmin<span class="token punctuation">.</span><span class="token function">LoginNew</span><span class="token punctuation">(</span></span>
<span class="line">		dadmin<span class="token punctuation">.</span><span class="token function">LoginWithCustomFieldExpire</span><span class="token punctuation">(</span><span class="token string">&quot;expires&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,48),o=[p];function i(c,l){return a(),s("div",null,o)}const d=n(t,[["render",i],["__file","get-started.html.vue"]]),r=JSON.parse('{"path":"/get-started.html","title":"指南","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"快速上手","slug":"快速上手","link":"#快速上手","children":[]},{"level":2,"title":"方法","slug":"方法","link":"#方法","children":[{"level":3,"title":"响应","slug":"响应","link":"#响应","children":[]},{"level":3,"title":"登录","slug":"登录","link":"#登录","children":[]}]}],"git":{"updatedTime":1719899616000,"contributors":[{"name":"Your Name","email":"you@example.com","commits":4}]},"filePathRelative":"get-started.md"}');export{d as comp,r as data};
